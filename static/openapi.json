{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "QuLib",
    "description": "A collection of Quantum Algorithms implemented as APIs."
  },
  "paths": {
    "/demo/get_grover_circuit": {
      "get": {
        "tags": [
          "Get a custom oracle circuit for Grover's algorithm."
        ],
        "description": "provides a custom qiskit.QuantumCircuit of the required specifications, in string format.",
        "parameters": [
          {
            "in": "query",
            "name": "qubits",
            "required": true,
            "description": "number of qubits required in the circuit.",
            "schema": {
              "type": "integer",
              "example": 3
            }
          },
          {
            "in": "query",
            "name": "good states",
            "required": true,
            "description": "list of winning states to be found, maximum value should be less than 2^(qubits).",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns the quantum circut for grover's algorithm in string format.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "UUlTS0lUAwATAQAAAAAAAAABAAlpAAgAAAAGAAAABgAAAAAAAAAEAAAAAgAAAAAAAAAiY2lyY3VpdC05AAAAAAAAAABudWxscQEAAAAGAAFxAAAAAAAAAAEAAAACAAAAAwAAAAQAAAAFYwEAAAAGAAFjAAAAAAAAAAEAAAACAAAAAwAAAAQAAAAFAAAAAAAAAAAABQAAAAAAAAABAAAAAAAAAAAAAAAAAAAASEdhdGVxAAAAAAAFAAAAAAAAAAEAAAAAAAAAAAAAAAAAAABIR2F0ZXEAAAABAAUAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAEhHYXRlcQAAAAIABQAAAAAAAAABAAAAAAAAAAAAAAAAAAAASEdhdGVxAAAAAwAFAAAAAAAAAAEAAAAAAAAAAAAAAAAAAABIR2F0ZXEAAAAEAAUAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAFhHYXRlcQAAAAUABQAAAAAAAAABAAAAAAAAAAAAAAAAAAAASEdhdGVxAAAABQAHAAAAAAAAAAYAAAAAAAAAAAAAAAAAAABCYXJyaWVycQAAAABxAAAAAXEAAAACcQAAAANxAAAABHEAAAAFAAUAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAFhHYXRlcQAAAAEABQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAWEdhdGVxAAAAAgAFAAAAAAAAAAEAAAAAAAAAAAAAAAAAAABYR2F0ZXEAAAADAAUAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAFhHYXRlcQAAAAQABgAAAAAAAAACAAAAAAAAAAAAAAAAAAAAQ1hHYXRlcQAAAABxAAAABQAGAAAAAAAAAAIAAAAAAAAAAAAAAAAAAABDWEdhdGVxAAAAAXEAAAAFAAYAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAENYR2F0ZXEAAAACcQAAAAUABgAAAAAAAAACAAAAAAAAAAAAAAAAAAAAQ1hHYXRlcQAAAANxAAAABQAGAAAAAAAAAAIAAAAAAAAAAAAAAAAAAABDWEdhdGVxAAAABHEAAAAFAAUAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAFhHYXRlcQAAAAEABQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAWEdhdGVxAAAAAgAFAAAAAAAAAAEAAAAAAAAAAAAAAAAAAABYR2F0ZXEAAAADAAUAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAFhHYXRlcQAAAAQABwAAAAAAAAAGAAAAAAAAAAAAAAAAAAAAQmFycmllcnEAAAAAcQAAAAFxAAAAAnEAAAADcQAAAARxAAAABQAFAAAAAAAAAAEAAAAAAAAAAAAAAAAAAABIR2F0ZXEAAAAAAAcAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAE1lYXN1cmVxAAAAAGMAAAAAAAUAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAEhHYXRlcQAAAAEABwAAAAAAAAABAAAAAQAAAAAAAAAAAAAATWVhc3VyZXEAAAABYwAAAAEABQAAAAAAAAABAAAAAAAAAAAAAAAAAAAASEdhdGVxAAAAAgAHAAAAAAAAAAEAAAABAAAAAAAAAAAAAABNZWFzdXJlcQAAAAJjAAAAAgAFAAAAAAAAAAEAAAAAAAAAAAAAAAAAAABIR2F0ZXEAAAADAAcAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAE1lYXN1cmVxAAAAA2MAAAADAAUAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAEhHYXRlcQAAAAQABwAAAAAAAAABAAAAAQAAAAAAAAAAAAAATWVhc3VyZXEAAAAEYwAAAAQABQAAAAAAAAABAAAAAAAAAAAAAAAAAAAASEdhdGVxAAAABQAHAAAAAAAAAAEAAAABAAAAAAAAAAAAAABNZWFzdXJlcQAAAAVjAAAABQ=="
                }
              }
            }
          }
        }
      }
    }
  }
}